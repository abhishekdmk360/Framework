<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-09T20:39:22 IST" name="Suite" finished-at="2024-12-09T20:40:34 IST" duration-ms="71905">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTesting.loginErrorValidation()[pri:0, instance:javaCoding.Testing.ErrorValidationsTesting@27912e3]" name="loginErrorValidation" class="javaCoding.Testing.ErrorValidationsTesting"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="PlaceOrderTesting.submitOrder(java.util.HashMap)[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" name="submitOrder" class="javaCoding.Testing.PlaceOrderTesting"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-12-09T20:39:22 IST" name="Error Validations Test" finished-at="2024-12-09T20:39:55 IST" duration-ms="32801">
      <class name="javaCoding.Testing.ErrorValidationsTesting">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:javaCoding.Testing.ErrorValidationsTesting@27912e3]" started-at="2024-12-09T20:39:22 IST" name="launchApplication" finished-at="2024-12-09T20:39:35 IST" duration-ms="13037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="explicitFail()[pri:0, instance:javaCoding.Testing.ErrorValidationsTesting@27912e3]" started-at="2024-12-09T20:39:35 IST" name="explicitFail" finished-at="2024-12-09T20:39:36 IST" duration-ms="886" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at javaCoding.Testing.ErrorValidationsTesting.explicitFail(ErrorValidationsTesting.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- explicitFail -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:javaCoding.Testing.ErrorValidationsTesting@27912e3]" started-at="2024-12-09T20:39:38 IST" name="quitDriver" finished-at="2024-12-09T20:39:39 IST" duration-ms="1489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:javaCoding.Testing.ErrorValidationsTesting@27912e3]" started-at="2024-12-09T20:39:39 IST" name="launchApplication" finished-at="2024-12-09T20:39:53 IST" duration-ms="13580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:javaCoding.Testing.ErrorValidationsTesting@27912e3]" started-at="2024-12-09T20:39:53 IST" name="loginErrorValidation" finished-at="2024-12-09T20:39:53 IST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:javaCoding.Testing.ErrorValidationsTesting@27912e3]" started-at="2024-12-09T20:39:53 IST" name="quitDriver" finished-at="2024-12-09T20:39:55 IST" duration-ms="1721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
      </class> <!-- javaCoding.Testing.ErrorValidationsTesting -->
    </test> <!-- Error Validations Test -->
    <test started-at="2024-12-09T20:39:22 IST" name="Place Order Test" finished-at="2024-12-09T20:40:34 IST" duration-ms="71905">
      <class name="javaCoding.Testing.PlaceOrderTesting">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:39:22 IST" name="launchApplication" finished-at="2024-12-09T20:39:36 IST" duration-ms="13566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginMessageValidation()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:39:36 IST" name="loginMessageValidation" finished-at="2024-12-09T20:39:37 IST" duration-ms="1272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginMessageValidation -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:39:37 IST" name="quitDriver" finished-at="2024-12-09T20:39:39 IST" duration-ms="1777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:39:39 IST" name="launchApplication" finished-at="2024-12-09T20:39:54 IST" duration-ms="14746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:39:54 IST" name="submitOrder" data-provider="getData" finished-at="2024-12-09T20:40:02 IST" duration-ms="8246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Abhishek@88, email=abhishekdmk@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:40:02 IST" name="quitDriver" finished-at="2024-12-09T20:40:04 IST" duration-ms="1437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:40:04 IST" name="launchApplication" finished-at="2024-12-09T20:40:13 IST" duration-ms="9594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:40:13 IST" name="submitOrder" data-provider="getData" finished-at="2024-12-09T20:40:21 IST" duration-ms="7227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, email=anshika@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:40:21 IST" name="quitDriver" finished-at="2024-12-09T20:40:22 IST" duration-ms="1398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:40:22 IST" name="launchApplication" finished-at="2024-12-09T20:40:32 IST" duration-ms="9618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryCheck()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:40:32 IST" name="orderHistoryCheck" finished-at="2024-12-09T20:40:33 IST" depends-on-methods="javaCoding.Testing.PlaceOrderTesting.submitOrder" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryCheck -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:javaCoding.Testing.PlaceOrderTesting@5e3f861]" started-at="2024-12-09T20:40:33 IST" name="quitDriver" finished-at="2024-12-09T20:40:34 IST" duration-ms="1396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
      </class> <!-- javaCoding.Testing.PlaceOrderTesting -->
    </test> <!-- Place Order Test -->
  </suite> <!-- Suite -->
</testng-results>
